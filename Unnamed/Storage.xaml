<Controls:MetroWindow
        xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls" x:Class="Unnamed.Storage"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
        Title="Storage" WindowTitleBrush="#0F0F0F" NonActiveWindowTitleBrush="#0F0F0F" Closing="MetroWindow_Closing" Foreground="Lime" TitleForeground="Lime" Height="500" Width="600">
    <Window.Resources>
        <Style x:Key="{x:Type ContextMenu}" TargetType="{x:Type ContextMenu}">
            <Setter Property="Background" Value="Black"/>
            <Setter Property="Foreground" Value="DarkOrange"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContextMenu}">
                        <MenuItem Background="Black"></MenuItem>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="MenuItem">
            <Setter Property="Background" Value="Black"/>
            <Setter Property="Foreground" Value="Lime"/>
        </Style>
        <Style x:Key="ButtonFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" RadiusX="20" RadiusY="20" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type Button}" x:Key="ImageButtonStyle">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ContentPresenter/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid Background="Black">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="40*"/>
            <ColumnDefinition Width="48*"/>
        </Grid.ColumnDefinitions>
        <Grid Grid.Column="1" Background="#0B0B0B">
            <Grid.RowDefinitions>
                <RowDefinition Height="200*"/>
                <RowDefinition Height="40*"/>
                <RowDefinition Height="120*"/>
            </Grid.RowDefinitions>
            <DataGrid Name="namesList" Grid.Row="0" ContextMenu="{Binding Path=mainwindow.SelectedFaction.Crew, Mode=OneWay, ElementName=ThisControl, UpdateSourceTrigger=PropertyChanged}" SelectedCellsChanged="namesList_SelectedCellsChanged" CanUserSortColumns="False" AutoGenerateColumns="False" CanUserAddRows="False" Background="#0F0F0F" Foreground="Lime" FontSize="16" >
                <DataGrid.Columns>
                    <DataGridTextColumn Header="NAME" Width="100*" Binding="{Binding Name, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True"/>
                    <DataGridTextColumn Header="CLASS" Width="60*" Binding="{Binding Subclass, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True"/>
                    <DataGridTextColumn Header="CHR" Width="25*" Binding="{Binding Attributes[5].Value, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True"/>
                </DataGrid.Columns>
                <DataGrid.Resources>
                    <Style BasedOn="{StaticResource {x:Type DataGridColumnHeader}}" TargetType="{x:Type DataGridColumnHeader}">
                        <Setter Property="Foreground" Value="Lime" />
                        <Setter Property="Background" Value="Black" />
                        <Setter Property="BorderBrush" Value="Lime" />
                        <Setter Property="BorderThickness" Value="1" />
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    </Style>
                </DataGrid.Resources>
            </DataGrid>
            <ToolBar Grid.Row="1" ToolBarTray.IsLocked="True" HorizontalAlignment="Center" BorderBrush="Lime" BorderThickness="1" FontSize="16">
                <Button Click="Button_Click">To Storage</Button>
                <Separator Background="Lime"/>
                <Button Click="Button_Click_1">Edit</Button>
                <Separator Background="Lime"/>
                <Button Click="Button_Click_2">Refresh</Button>
            </ToolBar>
            <DataGrid Name="memItems" Grid.Row="2" BorderBrush="Lime" BorderThickness="2" Grid.ColumnSpan="3" ContextMenu="{Binding Path=CharItems, Mode=TwoWay, ElementName=ThisControl, NotifyOnSourceUpdated=True, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged}" AutoGenerateColumns="False" CanUserSortColumns="False" CanUserAddRows="False" Background="#0F0F0F" Foreground="Lime" FontSize="12" >
                <DataGrid.Columns>
                    <DataGridTextColumn Header="item" Width="100*" Binding="{Binding Name, UpdateSourceTrigger=PropertyChanged}" />
                    <DataGridTextColumn Header="cost" Width="30*" Binding="{Binding Cost, UpdateSourceTrigger=PropertyChanged}" />
                    <DataGridTextColumn Header="weight" Width="40*" Binding="{Binding Weight, UpdateSourceTrigger=PropertyChanged}" />
                    <DataGridTextColumn Header="amount" Width="40*" Binding="{Binding Stack, UpdateSourceTrigger=PropertyChanged}" />
                </DataGrid.Columns>
                <DataGrid.Resources>
                    <Style BasedOn="{StaticResource {x:Type DataGridColumnHeader}}" TargetType="{x:Type DataGridColumnHeader}">
                        <Setter Property="Foreground" Value="Lime" />
                        <Setter Property="Background" Value="Black" />
                        <Setter Property="BorderBrush" Value="Lime" />
                        <Setter Property="BorderThickness" Value="1" />
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    </Style>
                </DataGrid.Resources>
            </DataGrid>
        </Grid>
        <Grid Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="250*"/>
                <RowDefinition Height="25*"/>
                <RowDefinition Height="25*"/>
                <RowDefinition Height="25*"/>
            </Grid.RowDefinitions>
            <DataGrid Name="storageItems" BorderBrush="Lime" BorderThickness="2" Grid.ColumnSpan="3" ContextMenu="{Binding Path=mainwindow.SelectedFaction.Storage, Mode=TwoWay, ElementName=ThisControl, NotifyOnSourceUpdated=True, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged}" SelectedCellsChanged="storageItems_SelectedCellsChanged" CanUserSortColumns="False" AutoGenerateColumns="False" CanUserAddRows="False" Background="#0F0F0F" Foreground="Lime" FontSize="12" >
                <DataGrid.Columns>
                    <DataGridTextColumn Header="item" Width="100*" Binding="{Binding Name, UpdateSourceTrigger=PropertyChanged}" />
                    <DataGridTextColumn Header="cost" Width="30*" Binding="{Binding Cost, UpdateSourceTrigger=PropertyChanged}" />
                    <DataGridTextColumn Header="weight" Width="40*" Binding="{Binding Weight, UpdateSourceTrigger=PropertyChanged}" />
                    <DataGridTextColumn Header="amount" Width="40*" Binding="{Binding Stack, UpdateSourceTrigger=PropertyChanged}" />
                </DataGrid.Columns>
                <DataGrid.Resources>
                    <Style BasedOn="{StaticResource {x:Type DataGridColumnHeader}}" TargetType="{x:Type DataGridColumnHeader}">
                        <Setter Property="Foreground" Value="Lime" />
                        <Setter Property="Background" Value="Black" />
                        <Setter Property="BorderBrush" Value="Lime" />
                        <Setter Property="BorderThickness" Value="1" />
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    </Style>
                </DataGrid.Resources>
            </DataGrid>
            <Button Name="giveButton" Click="giveButton_Click"  Grid.Row="1" Margin="1,1,1,1" BorderBrush="Lime" FontSize="16" Foreground="Lime" Background="Black">GIVE</Button>
            <Button Name="sellButton" Click="sellButton_Click"  Grid.Row="2" Margin="1,1,1,1" BorderBrush="Yellow" FontSize="16" Foreground="Yellow" Background="Black">SELL</Button>
            <Button Name="destroyButton" Click="destroyButton_Click"  Grid.Row="3" Margin="1,1,1,1" BorderBrush="Red" FontSize="16" Foreground="Red" Background="Black">DESTROY</Button>
        </Grid>
        <Border Grid.Column="0" Grid.RowSpan="4" BorderThickness="2" BorderBrush="Lime"/>
    </Grid>
</Controls:MetroWindow>