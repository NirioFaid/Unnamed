<Controls:MetroWindow
        xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls" x:Class="Unnamed.Mission"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
        Title="Mission" WindowTitleBrush="#0F0F0F" NonActiveWindowTitleBrush="#0F0F0F" Foreground="Lime" TitleForeground="Lime" Height="650" Width="900">
    <Window.Resources>
        <Style x:Key="{x:Type ContextMenu}" TargetType="{x:Type ContextMenu}">
            <Setter Property="Background" Value="Black"/>
            <Setter Property="Foreground" Value="DarkOrange"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContextMenu}">
                        <MenuItem Background="Black"></MenuItem>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="MenuItem">
            <Setter Property="Background" Value="Black"/>
            <Setter Property="Foreground" Value="Lime"/>
        </Style>
        <Style x:Key="ButtonFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" RadiusX="20" RadiusY="20" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TooltipCell" TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource MetroDataGridCell}">
            <Setter Property="ToolTip" Value="{Binding Path=Description}"/>
        </Style>
        <Style x:Key="CenterAlignCell" TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource MetroDataGridCell}">
            <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center"/>
        </Style>
        <Style TargetType="{x:Type Button}" x:Key="ImageButtonStyle">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ContentPresenter/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid Background="Black">
        <Grid.RowDefinitions>
            <RowDefinition Height="40*"/>
            <RowDefinition Height="40*"/>
            <RowDefinition Height="40*"/>
            <RowDefinition Height="40*"/>
            <RowDefinition Height="40*"/>
            <RowDefinition Height="40*"/>
            <RowDefinition Height="40*"/>
            <RowDefinition Height="40*"/>
            <RowDefinition Height="40*"/>
            <RowDefinition Height="40*"/>
            <RowDefinition Height="40*"/>
            <RowDefinition Height="40*"/>
            <RowDefinition Height="40*"/>
            <RowDefinition Height="40*"/>
            <RowDefinition Height="40*"/>
            <RowDefinition Height="40*"/>
            <RowDefinition Height="40*"/>
            <RowDefinition Height="45*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="40*"/>
            <ColumnDefinition Width="20*"/>
            <ColumnDefinition Width="20*"/>
            <ColumnDefinition Width="20*"/>
            <ColumnDefinition Width="20*"/>
            <ColumnDefinition Width="40*"/>
        </Grid.ColumnDefinitions>

        <TextBox Name="titleBox" Grid.Column="1" Grid.ColumnSpan="4" BorderBrush="Lime" Foreground="Lime" FontSize="24"/>
        
        <RichTextBox Name="log" Grid.Row="1" SelectionBrush="Lime" Grid.Column="1" Grid.RowSpan="5" Grid.ColumnSpan="4" BorderThickness="2" BorderBrush="Lime" IsReadOnly="True" CaretBrush="Lime" Foreground="Lime" FontSize="16" Background="#0B0B0B" VerticalScrollBarVisibility="Auto">
            <RichTextBox.Resources>
                <Style TargetType="{x:Type RichTextBox}">
                    <Style.Triggers>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="Foreground" Value="Lime"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
                <Style TargetType="{x:Type Paragraph}">
                    <Setter Property="Margin" Value="0" />
                </Style>
            </RichTextBox.Resources>
        </RichTextBox>

        <ListBox Name="allyList" Grid.RowSpan="10" Background="#0F0F0F" Focusable="False" MouseDoubleClick="allyName_MouseDoubleClick" FontSize="16" HorizontalContentAlignment="Stretch" SelectionChanged="allyList_SelectionChanged" ContextMenu="{Binding Path=AllyList, Mode=OneWay, ElementName=ThisControl, UpdateSourceTrigger=PropertyChanged}">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Grid Margin="0,1,0,1">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.ColumnSpan="2" Text="{Binding Path=Name, UpdateSourceTrigger=PropertyChanged}" >
                        <ToolTipService.ToolTip> 
                            <TextBlock>
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0} {1}">
                                            <Binding Path="Gender" Mode="OneWay" UpdateSourceTrigger="PropertyChanged"/>
                                            <Binding Path="Race" Mode="OneWay" UpdateSourceTrigger="PropertyChanged"/>
                                        </MultiBinding>
                                    </TextBlock.Text> 
                            </TextBlock> 
                        </ToolTipService.ToolTip>
                        </TextBlock>
                        <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding Path=Subclass, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center"/>
                        <Controls:MetroProgressBar Value="{Binding Path=HP, UpdateSourceTrigger=PropertyChanged}" Maximum="{Binding Path=maxHP, UpdateSourceTrigger=PropertyChanged}" Grid.Row="1" Foreground="DarkRed" VerticalAlignment="Bottom" Background="Transparent" BorderBrush="Transparent"/>
                        <TextBlock Grid.Row="1" Grid.Column="0" HorizontalAlignment="Center">
                            <TextBlock.Text>
                                <MultiBinding StringFormat="{}{0}/{1}">
                                    <Binding Path="HP" Mode="OneWay" UpdateSourceTrigger="PropertyChanged" />
                                    <Binding Path="maxHP" Mode="OneWay" UpdateSourceTrigger="PropertyChanged" />
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                        <Controls:MetroProgressBar Value="{Binding Path=WP, UpdateSourceTrigger=PropertyChanged}" Maximum="{Binding Path=maxWP, UpdateSourceTrigger=PropertyChanged}" Grid.Row="1" Grid.Column="1" VerticalAlignment="Bottom" Foreground="DarkGoldenrod" Background="Transparent" BorderBrush="Transparent"/>
                        <TextBlock Grid.Row="1" Grid.Column="1" HorizontalAlignment="Center">
                            <TextBlock.Text>
                                <MultiBinding StringFormat="{}{0}/{1}">
                                    <Binding Path="WP" Mode="OneWay" UpdateSourceTrigger="PropertyChanged" />
                                    <Binding Path="maxWP" Mode="OneWay" UpdateSourceTrigger="PropertyChanged" />
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                        <Controls:MetroProgressBar Value="{Binding Path=MP, UpdateSourceTrigger=PropertyChanged}" Maximum="{Binding Path=maxMP, UpdateSourceTrigger=PropertyChanged}" Grid.Row="2" Grid.Column="0" VerticalAlignment="Bottom" Foreground="RoyalBlue" Background="Transparent" BorderBrush="Transparent"/>
                        <TextBlock Grid.Row="2" Grid.Column="0" HorizontalAlignment="Center">
                            <TextBlock.Text>
                                <MultiBinding StringFormat="{}{0}/{1}">
                                    <Binding Path="MP" Mode="OneWay" UpdateSourceTrigger="PropertyChanged" />
                                    <Binding Path="maxMP" Mode="OneWay" UpdateSourceTrigger="PropertyChanged" />
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                        <Controls:MetroProgressBar Value="{Binding Path=SP, UpdateSourceTrigger=PropertyChanged}" Maximum="{Binding Path=maxSP, UpdateSourceTrigger=PropertyChanged}" Grid.Row="2" Grid.Column="1" VerticalAlignment="Bottom" Foreground="ForestGreen" Background="Transparent" BorderBrush="Transparent"/>
                        <TextBlock Grid.Row="2" Grid.Column="1" HorizontalAlignment="Center">
                            <TextBlock.Text>
                                <MultiBinding StringFormat="{}{0}/{1}">
                                    <Binding Path="SP" Mode="OneWay" UpdateSourceTrigger="PropertyChanged" />
                                    <Binding Path="maxSP" Mode="OneWay" UpdateSourceTrigger="PropertyChanged" />
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                    </Grid>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        <ListBox Name="enemyList" Grid.RowSpan="10" Grid.Column="5" Background="#0F0F0F" Focusable="False" MouseDoubleClick="enemyName_MouseDoubleClick" FontSize="16" HorizontalContentAlignment="Stretch" SelectionChanged="enemyList_SelectionChanged" ContextMenu="{Binding Path=EnemyList, Mode=OneWay, ElementName=ThisControl, UpdateSourceTrigger=PropertyChanged}">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Grid Margin="0,1,0,1">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.ColumnSpan="2" Text="{Binding Path=Name, UpdateSourceTrigger=PropertyChanged}" >
                        <ToolTipService.ToolTip> 
                            <TextBlock>
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0} {1}">
                                            <Binding Path="Gender" Mode="OneWay" UpdateSourceTrigger="PropertyChanged"/>
                                            <Binding Path="Race" Mode="OneWay" UpdateSourceTrigger="PropertyChanged"/>
                                        </MultiBinding>
                                    </TextBlock.Text> 
                            </TextBlock> 
                        </ToolTipService.ToolTip>
                        </TextBlock>
                        <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding Path=Subclass, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center"/>
                        <Controls:MetroProgressBar Value="{Binding Path=HP, UpdateSourceTrigger=PropertyChanged}" Maximum="{Binding Path=maxHP, UpdateSourceTrigger=PropertyChanged}" Grid.Row="1" Foreground="DarkRed" VerticalAlignment="Bottom" Background="Transparent" BorderBrush="Transparent"/>
                        <TextBlock Grid.Row="1" Grid.Column="0" HorizontalAlignment="Center">
                            <TextBlock.Text>
                                <MultiBinding StringFormat="{}{0}/{1}">
                                    <Binding Path="HP" Mode="OneWay" UpdateSourceTrigger="PropertyChanged" />
                                    <Binding Path="maxHP" Mode="OneWay" UpdateSourceTrigger="PropertyChanged" />
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                        <Controls:MetroProgressBar Value="{Binding Path=WP, UpdateSourceTrigger=PropertyChanged}" Maximum="{Binding Path=maxWP, UpdateSourceTrigger=PropertyChanged}" Grid.Row="1" Grid.Column="1" VerticalAlignment="Bottom" Foreground="DarkGoldenrod" Background="Transparent" BorderBrush="Transparent"/>
                        <TextBlock Grid.Row="1" Grid.Column="1" HorizontalAlignment="Center">
                            <TextBlock.Text>
                                <MultiBinding StringFormat="{}{0}/{1}">
                                    <Binding Path="WP" Mode="OneWay" UpdateSourceTrigger="PropertyChanged" />
                                    <Binding Path="maxWP" Mode="OneWay" UpdateSourceTrigger="PropertyChanged" />
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                        <Controls:MetroProgressBar Value="{Binding Path=MP, UpdateSourceTrigger=PropertyChanged}" Maximum="{Binding Path=maxMP, UpdateSourceTrigger=PropertyChanged}" Grid.Row="2" Grid.Column="0" VerticalAlignment="Bottom" Foreground="RoyalBlue" Background="Transparent" BorderBrush="Transparent"/>
                        <TextBlock Grid.Row="2" Grid.Column="0" HorizontalAlignment="Center">
                            <TextBlock.Text>
                                <MultiBinding StringFormat="{}{0}/{1}">
                                    <Binding Path="MP" Mode="OneWay" UpdateSourceTrigger="PropertyChanged" />
                                    <Binding Path="maxMP" Mode="OneWay" UpdateSourceTrigger="PropertyChanged" />
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                        <Controls:MetroProgressBar Value="{Binding Path=SP, UpdateSourceTrigger=PropertyChanged}" Maximum="{Binding Path=maxSP, UpdateSourceTrigger=PropertyChanged}" Grid.Row="2" Grid.Column="1" VerticalAlignment="Bottom" Foreground="ForestGreen" Background="Transparent" BorderBrush="Transparent"/>
                        <TextBlock Grid.Row="2" Grid.Column="1" HorizontalAlignment="Center">
                            <TextBlock.Text>
                                <MultiBinding StringFormat="{}{0}/{1}">
                                    <Binding Path="SP" Mode="OneWay" UpdateSourceTrigger="PropertyChanged" />
                                    <Binding Path="maxSP" Mode="OneWay" UpdateSourceTrigger="PropertyChanged" />
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                    </Grid>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>

        <Grid Grid.Row="10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="20*"/>
                <ColumnDefinition Width="20*"/>
                <ColumnDefinition Width="20*"/>
            </Grid.ColumnDefinitions>
            <Button Name="addGuildAllyButton" Click="addGuildAllyButton_Click"  Grid.Column="0" Grid.Row="5" Margin="1,1,1,1" BorderBrush="Lime" FontSize="10" Foreground="Lime" Background="Black">+ guildian</Button>
            <Button Name="addCustomAllyButton" Click="addCustomAllyButton_Click"  Grid.Column="1" Grid.Row="5" Margin="1,1,1,1" BorderBrush="Lime" FontSize="10" Foreground="Lime" Background="Black">+ custom</Button>
            <Button Name="deleteAllyButton" Click="deleteAllyButton_Click" Grid.Column="2" Grid.Row="5" Margin="1,1,1,1" BorderBrush="Lime" FontSize="10" Foreground="Lime" Background="Black">remove</Button>
        </Grid>

        <Grid Grid.Row="10" Grid.Column="5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="20*"/>
                <ColumnDefinition Width="20*"/>
                <ColumnDefinition Width="20*"/>
            </Grid.ColumnDefinitions>
            <Button Name="addGuildEnemyButton" Click="addGuildEnemyButton_Click"  Grid.Column="0" Grid.Row="5" Margin="1,1,1,1" BorderBrush="Lime" FontSize="10" Foreground="Lime" Background="Black">+ guildian</Button>
            <Button Name="addCustomEnemyButton" Click="addCustomEnemyButton_Click"  Grid.Column="1" Grid.Row="5" Margin="1,1,1,1" BorderBrush="Lime" FontSize="10" Foreground="Lime" Background="Black">+ custom</Button>
            <Button Name="deleteEnemyButton" Click="deleteEnemyButton_Click"  Grid.Column="2" Grid.Row="5" Margin="1,1,1,1" BorderBrush="Lime" FontSize="10" Foreground="Lime" Background="Black">Remove</Button>
        </Grid>

        <Grid Grid.Row="11">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="20*"/>
                <ColumnDefinition Width="20*"/>
                <ColumnDefinition Width="20*"/>
            </Grid.ColumnDefinitions>
            <Button Name="addToGuildButton" Click="addToGuildButton_Click" IsEnabled="False" Grid.Column="0" Grid.Row="5" Margin="1,1,1,1" BorderBrush="Lime" FontSize="10" Foreground="Lime" Background="Black">to guild</Button>
            <Button Name="addAllyToWorldButton" Click="addAllyToWorldButton_Click" Grid.Column="1" Grid.Row="5" Margin="1,1,1,1" BorderBrush="Lime" FontSize="10" Foreground="Lime" Background="Black">+ world</Button>
            <Button Name="moveAllyButton" Click="moveAllyButton_Click"  Grid.Column="2" Grid.Row="5" Margin="1,1,1,1" BorderBrush="Lime" FontSize="10" Foreground="Lime" Background="Black">to right</Button>
        </Grid>

        <Grid Grid.Row="11" Grid.Column="6">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="20*"/>
                <ColumnDefinition Width="20*"/>
                <ColumnDefinition Width="20*"/>
            </Grid.ColumnDefinitions>
            <Button Name="moveEnemyButton" Click="moveEnemyButton_Click"  Grid.Column="0" Grid.Row="5" Margin="1,1,1,1" BorderBrush="Lime" FontSize="10" Foreground="Lime" Background="Black">to left</Button>
            <Button Name="addPrisonerButton" Click="addPrisonerButton_Click" IsEnabled="False" Grid.Column="2" Grid.Row="5" Margin="1,1,1,1" BorderBrush="Lime" FontSize="10" Foreground="Lime" Background="Black">to prison</Button>
            <Button Name="addEnemyToWorldButton" Click="addEnemyToWorldButton_Click" Grid.Column="1" Grid.Row="5" Margin="1,1,1,1" BorderBrush="Lime" FontSize="10" Foreground="Lime" Background="Black">+world</Button>
        </Grid>

        <ListBox Name="allyMoves" SelectionChanged="allyMoves_SelectionChanged" Grid.Row="12" Grid.RowSpan="5" Foreground="Lime" FontSize="16" Background="#0B0B0B">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding Path=Name, UpdateSourceTrigger=PropertyChanged}"
                       ToolTipService.ToolTip="{Binding Path=Descr, UpdateSourceTrigger=PropertyChanged}"/>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>

        <ListBox Name="enemyMoves" SelectionChanged="enemyMoves_SelectionChanged" Grid.Row="12" Grid.Column="5" Grid.RowSpan="5" Foreground="Lime" FontSize="16" Background="#0B0B0B">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding Path=Name, UpdateSourceTrigger=PropertyChanged}"
                       ToolTipService.ToolTip="{Binding Path=Descr, UpdateSourceTrigger=PropertyChanged}"/>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>

        <TextBox Grid.Row="6" Visibility="Collapsed" IsReadOnly="True" Grid.Column="1" Grid.ColumnSpan="2" Foreground="Lime" FontSize="16" VerticalAlignment="Center" HorizontalAlignment="Center" BorderThickness="0" Background="Transparent">
            <TextBox.Text>
                <MultiBinding StringFormat="{}Balance Points: {0}">
                    <Binding Path="BP" Mode="OneWay" UpdateSourceTrigger="PropertyChanged" />
                </MultiBinding>
            </TextBox.Text>
        </TextBox>
        <Button Name="turnDisplay" Click="turnDisplay_Click" Content="START BATTLE" Grid.Column="3" Grid.Row="6" Grid.ColumnSpan="2" Foreground="Lime" BorderThickness="1" BorderBrush="Lime" Margin="1,1,1,1" FontSize="16" Background="Transparent"/>

        <TabControl BorderThickness="0" Grid.Row="7" Grid.Column="1" Grid.RowSpan="8" Grid.ColumnSpan="4">
            <TabItem Name="items" Header="Items" Controls:ControlsHelper.HeaderFontSize="14">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="11*"/>
                        <ColumnDefinition Width="11*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="14*"/>
                    </Grid.RowDefinitions>
                    <DataGrid Name="allyItems" Grid.Row="0" Grid.Column="0" BorderBrush="Lime" BorderThickness="2" ContextMenu="{Binding Path=SelectedAlly.Inventory, Mode=OneWay, ElementName=ThisControl, NotifyOnSourceUpdated=True, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged}" SelectedCellsChanged="allyItems_SelectedCellsChanged" CanUserSortColumns="False" AutoGenerateColumns="False" CanUserAddRows="False" Background="#0F0F0F" Foreground="Lime" FontSize="14" >
                        <DataGrid.Columns>
                            <DataGridTextColumn CellStyle="{StaticResource TooltipCell}" Header="Item" Width="100*" Binding="{Binding Name, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True" />
                            <DataGridTextColumn CellStyle="{StaticResource CenterAlignCell}" Header="Count" Width="32*" Binding="{Binding Stack, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True" />
                        </DataGrid.Columns>
                        <DataGrid.Resources>
                            <Style BasedOn="{StaticResource {x:Type DataGridColumnHeader}}" TargetType="{x:Type DataGridColumnHeader}">
                                <Setter Property="Foreground" Value="Lime" />
                                <Setter Property="Background" Value="Black" />
                                <Setter Property="BorderBrush" Value="Lime" />
                                <Setter Property="BorderThickness" Value="1" />
                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            </Style>
                        </DataGrid.Resources>
                    </DataGrid>
                    <DataGrid Name="enemyItems" Grid.Row="0" Grid.Column="1" BorderBrush="Lime" BorderThickness="2" ContextMenu="{Binding Path=SelectedEnemy.Inventory, Mode=OneWay, ElementName=ThisControl, NotifyOnSourceUpdated=True, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged}" CanUserSortColumns="False" SelectedCellsChanged="enemyItems_SelectedCellsChanged" AutoGenerateColumns="False" CanUserAddRows="False" Background="#0F0F0F" Foreground="Lime" FontSize="14" >
                        <DataGrid.Columns>
                            <DataGridTextColumn CellStyle="{StaticResource TooltipCell}" Header="Item" Width="100*" Binding="{Binding Name, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True" />
                            <DataGridTextColumn CellStyle="{StaticResource CenterAlignCell}" Header="Count" Width="32*" Binding="{Binding Stack, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True" />
                        </DataGrid.Columns>
                        <DataGrid.Resources>
                            <Style BasedOn="{StaticResource {x:Type DataGridColumnHeader}}" TargetType="{x:Type DataGridColumnHeader}">
                                <Setter Property="Foreground" Value="Lime" />
                                <Setter Property="Background" Value="Black" />
                                <Setter Property="BorderBrush" Value="Lime" />
                                <Setter Property="BorderThickness" Value="1" />
                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            </Style>
                        </DataGrid.Resources>
                    </DataGrid>

                </Grid>
            </TabItem>
            <TabItem Name="target" Header="Target" Controls:ControlsHelper.HeaderFontSize="14">
                
            </TabItem>
            <TabItem Name="area" Header="Area" Controls:ControlsHelper.HeaderFontSize="14">
                
            </TabItem>
        </TabControl>
        <Button Name="allyThrowButton" Click="allyThrowButton_Click" IsEnabled="False" Grid.Column="1" Grid.Row="16" Margin="1,1,1,1" BorderBrush="Lime" FontSize="16" Foreground="Lime" Background="Black">use</Button>
        <Button Name="cancelButton" Click="cancelButton_Click" Grid.Column="2" Grid.Row="17" Margin="1,1,1,1" BorderBrush="Lime" FontSize="16" Foreground="Lime" Background="Black">cancel</Button>
        <Button Name="endBattleButton" Click="endBattleButton_Click"  Grid.Column="5" Grid.Row="17" Margin="1,1,1,1" BorderBrush="Lime" FontSize="16" Foreground="Lime" Background="Black">end battle</Button>
        <Button Name="exchangeButton" Click="exchangeButton_Click"  Grid.Column="3" Grid.Row="17" Margin="1,1,1,1" BorderBrush="Lime" FontSize="16" Foreground="Lime" Background="Black">exchange</Button>
        <Button Name="enemyAutoButton" Click="enemyAutoButton_Click"  Grid.Column="4" Grid.Row="17" Margin="1,1,1,1" BorderBrush="Lime" FontSize="16" Foreground="Lime" Background="Black">auto mode</Button>
        <Button Name="enemyThrowButton" Click="enemyThrowButton_Click" IsEnabled="False" Grid.Column="4" Grid.Row="16" Margin="1,1,1,1" BorderBrush="Lime" FontSize="16" Foreground="Lime" Background="Black">use</Button>

        <TextBox Name="hitBox" Grid.Column="2" Grid.Row="16" TextAlignment="Center" Focusable="False" Grid.ColumnSpan="2" IsReadOnly="True" BorderBrush="Lime" Foreground="Lime" Background="Transparent" FontSize="20"/>

        <Button Name="leaveButton" Click="leaveButton_Click" Grid.Column="0" Grid.Row="17" Margin="1,1,1,1" BorderBrush="Lime" FontSize="16" Foreground="Lime" Background="Black">LEAVE</Button>

    </Grid>
</Controls:MetroWindow>