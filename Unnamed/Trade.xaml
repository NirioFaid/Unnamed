<Controls:MetroWindow
        xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls" x:Class="Unnamed.Trade"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
        Title="Trade" WindowTitleBrush="#0F0F0F" NonActiveWindowTitleBrush="#0F0F0F" Foreground="Lime" TitleForeground="Lime" Height="650" Width="900">
    <Window.Resources>
        <Style x:Key="{x:Type ContextMenu}" TargetType="{x:Type ContextMenu}">
            <Setter Property="Background" Value="Black"/>
            <Setter Property="Foreground" Value="DarkOrange"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContextMenu}">
                        <MenuItem Background="Black"></MenuItem>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="MenuItem">
            <Setter Property="Background" Value="Black"/>
            <Setter Property="Foreground" Value="Lime"/>
        </Style>
        <Style x:Key="ButtonFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" RadiusX="20" RadiusY="20" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TooltipCell" TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource MetroDataGridCell}">
            <Setter Property="ToolTip" Value="{Binding Path=Description}"/>
        </Style>
        <Style x:Key="CenterAlignCell" TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource MetroDataGridCell}">
            <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center"/>
        </Style>
        <Style TargetType="{x:Type Button}" x:Key="ImageButtonStyle">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ContentPresenter/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid Background="Black">
        <Grid.RowDefinitions>
            <RowDefinition Height="44*"/>
            <RowDefinition Height="44*"/>
            <RowDefinition Height="44*"/>
            <RowDefinition Height="44*"/>
            <RowDefinition Height="44*"/>
            <RowDefinition Height="30*"/>
            <RowDefinition Height="30*"/>
            <RowDefinition Height="40*"/>
            <RowDefinition Height="40*"/>
            <RowDefinition Height="40*"/>
            <RowDefinition Height="40*"/>
            <RowDefinition Height="40*"/>
            <RowDefinition Height="40*"/>
            <RowDefinition Height="40*"/>
            <RowDefinition Height="40*"/>
            <RowDefinition Height="40*"/>
            <RowDefinition Height="40*"/>
            <RowDefinition Height="45*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="40*"/>
            <ColumnDefinition Width="20*"/>
            <ColumnDefinition Width="20*"/>
            <ColumnDefinition Width="20*"/>
            <ColumnDefinition Width="20*"/>
            <ColumnDefinition Width="40*"/>
        </Grid.ColumnDefinitions>

        <DataGrid Name="traderList1" Grid.RowSpan="5" ContextMenu="{Binding Path=TraderList1, Mode=OneWay, ElementName=ThisControl, UpdateSourceTrigger=PropertyChanged}" SelectedCellsChanged="traderList1_SelectedCellsChanged" CanUserSortColumns="False" AutoGenerateColumns="False" CanUserAddRows="False" Background="#0F0F0F" Foreground="Lime" FontSize="16" >
            <DataGrid.Columns>
                <DataGridTextColumn Header="NAME" Width="90*" Binding="{Binding Name}" IsReadOnly="True"/>
                <DataGridTextColumn Header="CLASS" Width="64*" Binding="{Binding Subclass}" IsReadOnly="True"/>
            </DataGrid.Columns>
            <DataGrid.Resources>
                <Style BasedOn="{StaticResource {x:Type DataGridColumnHeader}}" TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="Foreground" Value="Lime" />
                    <Setter Property="Background" Value="Black" />
                    <Setter Property="BorderBrush" Value="Lime" />
                    <Setter Property="BorderThickness" Value="1" />
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                </Style>
            </DataGrid.Resources>
        </DataGrid>
        <DataGrid Name="traderList2" Grid.RowSpan="5" Grid.Column="5" ContextMenu="{Binding Path=TraderList2, Mode=OneWay, ElementName=ThisControl, UpdateSourceTrigger=PropertyChanged}" SelectedCellsChanged="traderList2_SelectedCellsChanged"  CanUserSortColumns="False" AutoGenerateColumns="False" CanUserAddRows="False" Background="#0F0F0F" Foreground="Lime" FontSize="16" >
            <DataGrid.Columns>
                <DataGridTextColumn Header="NAME" Width="90*" Binding="{Binding Name}" IsReadOnly="True"/>
                <DataGridTextColumn Header="CLASS" Width="64*" Binding="{Binding Subclass}" IsReadOnly="True"/>
            </DataGrid.Columns>
            <DataGrid.Resources>
                <Style BasedOn="{StaticResource {x:Type DataGridColumnHeader}}" TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="Foreground" Value="Lime" />
                    <Setter Property="Background" Value="Black" />
                    <Setter Property="BorderBrush" Value="Lime" />
                    <Setter Property="BorderThickness" Value="1" />
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                </Style>
            </DataGrid.Resources>
        </DataGrid>

        <Grid Grid.Row="5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="20*"/>
                <ColumnDefinition Width="20*"/>
            </Grid.ColumnDefinitions>
            <Button Name="addGuildButton1" Click="addGuildButton1_Click"  Grid.Column="0" Grid.Row="5" Margin="1,1,1,1" BorderBrush="Lime" FontSize="10" Foreground="Lime" Background="Black">+ guildian</Button>
            <Button Name="addWorldButton1" Click="addWorldButton1_Click"  Grid.Column="1" Grid.Row="5" Margin="1,1,1,1" BorderBrush="Lime" FontSize="10" Foreground="Lime" Background="Black">+ world</Button>
        </Grid>

        <Grid Grid.Row="5" Grid.Column="5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="20*"/>
                <ColumnDefinition Width="20*"/>
            </Grid.ColumnDefinitions>
            <Button Name="addGuildButton2" Click="addGuildButton2_Click"  Grid.Column="0" Grid.Row="5" Margin="1,1,1,1" BorderBrush="Lime" FontSize="10" Foreground="Lime" Background="Black">+ guildian</Button>
            <Button Name="addWorldButton2" Click="addWorldButton2_Click"  Grid.Column="1" Grid.Row="5" Margin="1,1,1,1" BorderBrush="Lime" FontSize="10" Foreground="Lime" Background="Black">+ world</Button>
        </Grid>

        <Grid Grid.Row="6">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="20*"/>
                <ColumnDefinition Width="20*"/>
            </Grid.ColumnDefinitions>
            <Button Name="deleteButton1" Click="deleteButton1_Click"  Grid.Column="0" Grid.Row="0" Margin="1,1,1,1" BorderBrush="Lime" FontSize="10" Foreground="Lime" Background="Black">remove</Button>
            <Button Name="moveButton1" Click="moveButton1_Click"  Grid.Column="2" Grid.Row="5" Margin="1,1,1,1" BorderBrush="Lime" FontSize="10" Foreground="Lime" Background="Black">move right</Button>
        </Grid>

        <Grid Grid.Row="6" Grid.Column="5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="20*"/>
                <ColumnDefinition Width="20*"/>
            </Grid.ColumnDefinitions>
            <Button Name="deleteButton2" Click="deleteButton2_Click"  Grid.Column="2" Grid.Row="5" Margin="1,1,1,1" BorderBrush="Lime" FontSize="10" Foreground="Lime" Background="Black">Remove</Button>
            <Button Name="moveButton2" Click="moveButton2_Click"  Grid.Column="0" Grid.Row="5" Margin="1,1,1,1" BorderBrush="Lime" FontSize="10" Foreground="Lime" Background="Black">move left</Button>
        </Grid>

        <TextBox Name="allyName" Grid.Row="7" Foreground="Lime" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="14" IsReadOnly="True" TextAlignment="Left" BorderThickness="0" Background="#0F0F0F">
            <TextBox.Text>
                <MultiBinding StringFormat="{}{0}, {1} {2}">
                    <Binding Path="Selected1.Name" Mode="OneWay"  UpdateSourceTrigger="PropertyChanged"/>
                    <Binding Path="Selected1.Gender" Mode="OneWay"  UpdateSourceTrigger="PropertyChanged"/>
                    <Binding Path="Selected1.Race" Mode="OneWay"  UpdateSourceTrigger="PropertyChanged"/>
                </MultiBinding>
            </TextBox.Text>
        </TextBox>
        <TextBox Name="enemyName" Grid.Row="7" Grid.Column="5" Foreground="Lime" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="14" IsReadOnly="True" TextAlignment="Left" BorderThickness="0" Background="#0F0F0F">
            <TextBox.Text>
                <MultiBinding StringFormat="{}{0}, {1} {2}">
                    <Binding Path="Selected2.Name" Mode="OneWay"  UpdateSourceTrigger="PropertyChanged"/>
                    <Binding Path="Selected2.Gender" Mode="OneWay"  UpdateSourceTrigger="PropertyChanged"/>
                    <Binding Path="Selected2.Race" Mode="OneWay"  UpdateSourceTrigger="PropertyChanged"/>
                </MultiBinding>
            </TextBox.Text>
        </TextBox>

        <Label Grid.Column="1" Grid.Row="7" HorizontalAlignment="Center" Foreground="Lime" FontSize="12" Content="Give coins:" VerticalAlignment="Center"/>
        <Label Grid.Column="3" Grid.Row="7" HorizontalAlignment="Center" Foreground="Lime" FontSize="12" Content="Give coins:" VerticalAlignment="Center"/>
        <Label Grid.Column="1" Grid.Row="6" HorizontalAlignment="Center" Foreground="Lime" FontSize="12" Content="Current coins:" VerticalAlignment="Center"/>
        <Label Grid.Column="1" Grid.Row="5" HorizontalAlignment="Center" Foreground="Lime" FontSize="12" Content="Weight:" VerticalAlignment="Center"/>
        <Label Grid.Column="3" Grid.Row="6" HorizontalAlignment="Center" Foreground="Lime" FontSize="12" Content="Current coins:" VerticalAlignment="Center"/>
        <Label Grid.Column="3" Grid.Row="5" HorizontalAlignment="Center" Foreground="Lime" FontSize="12" Content="Weight:" VerticalAlignment="Center"/>
        <Controls:NumericUpDown HideUpDownButtons="True" Name="givenCoins1" Grid.Column="2" Grid.Row="7" BorderBrush="Lime" BorderThickness="0" Value="0" Maximum="{Binding Path=Selected1.Coins, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" Minimum="0" HorizontalAlignment="Left" TextAlignment="Left" Speedup="True" Interval="1" FontSize="16" Background="#0F0F0F" Foreground="Lime"/>
        <Controls:NumericUpDown Value="{Binding Path=Selected1.Coins, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" IsReadOnly="True" HideUpDownButtons="True" Name="coins1" Grid.Column="2" Grid.Row="6" BorderBrush="Lime" BorderThickness="0" Minimum="0" HorizontalAlignment="Left" TextAlignment="Left" Speedup="True" Interval="1" FontSize="16" Background="#0F0F0F" Foreground="Lime"/>
        <Controls:NumericUpDown HideUpDownButtons="True" Name="givenCoins2" Grid.Column="4" Grid.Row="7" BorderBrush="Lime" BorderThickness="0" Value="0" Maximum="{Binding Path=Selected2.Coins, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" Minimum="0" HorizontalAlignment="Left" TextAlignment="Left" Speedup="True" Interval="1" FontSize="16" Background="#0F0F0F" Foreground="Lime"/>
        <Controls:NumericUpDown Value="{Binding Path=Selected2.Coins, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" IsReadOnly="True" HideUpDownButtons="True" Name="coins2" Grid.Column="4" Grid.Row="6" BorderBrush="Lime" BorderThickness="0" Minimum="0" HorizontalAlignment="Left" TextAlignment="Left" Speedup="True" Interval="1" FontSize="16" Background="#0F0F0F" Foreground="Lime"/>

        <TextBox Grid.Row="5" IsReadOnly="True" Grid.Column="2" Foreground="Lime" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Left" BorderThickness="0" TextAlignment="Center" Background="#0F0F0F">
            <TextBox.Text>
                <MultiBinding StringFormat="{}{0}/{1}">
                    <Binding Path="Selected1.carryWeight" Mode="OneWay" />
                    <Binding Path="Selected1.maxCarryWeight" Mode="OneWay" />
                </MultiBinding>
            </TextBox.Text>
        </TextBox>
        <TextBox Grid.Row="5" IsReadOnly="True" Grid.Column="4" Foreground="Lime" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Left" BorderThickness="0" TextAlignment="Center" Background="#0F0F0F">
            <TextBox.Text>
                <MultiBinding StringFormat="{}{0}/{1}">
                    <Binding Path="Selected2.carryWeight" Mode="OneWay" />
                    <Binding Path="Selected2.maxCarryWeight" Mode="OneWay" />
                </MultiBinding>
            </TextBox.Text>
        </TextBox>

        <ComboBox Name="statThrow1" IsEnabled="False" SelectionChanged="statThrow1_SelectionChanged" Grid.Row="0" Grid.Column="1" Background="Transparent" Foreground="Lime" BorderBrush="Lime"/>
        <ComboBox Name="statThrow2" IsEnabled="False" SelectionChanged="statThrow2_SelectionChanged" Grid.Row="0" Grid.Column="4" Background="Transparent" Foreground="Lime" BorderBrush="Lime"/>

        <Button Name="statThrowButton1" Click="statThrowButton1_Click" IsEnabled="False" Grid.Column="1" Grid.Row="1" Margin="1,1,1,1" BorderBrush="Lime" FontSize="16" Foreground="Lime" Background="Black">Generate</Button>
        <TextBox Name="statThrowResultBox1" Grid.Column="2" Grid.Row="0" TextAlignment="Center" IsReadOnly="True" BorderBrush="Lime" Foreground="Lime" Background="Transparent" FontSize="18"/>

        <Button Name="statThrowButton2" Click="statThrowButton2_Click" IsEnabled="False" Grid.Column="4" Grid.Row="1" Margin="1,1,1,1" BorderBrush="Lime" FontSize="16" Foreground="Lime" Background="Black">Generate</Button>
        <TextBox Name="statThrowResultBox2" Grid.Column="3" Grid.Row="0" TextAlignment="Center" IsReadOnly="True" BorderBrush="Lime" Foreground="Lime" Background="Transparent" FontSize="18"/>


        <TextBox Grid.Row="4" Visibility="Collapsed" IsReadOnly="True" Grid.Column="1" Grid.ColumnSpan="4" Foreground="Lime" FontSize="16" VerticalAlignment="Center" HorizontalAlignment="Center" BorderThickness="0" Background="Transparent">
            <TextBox.Text>
                <MultiBinding StringFormat="{}Cost value: {0}">
                    <Binding Path="BP" Mode="OneWay" UpdateSourceTrigger="PropertyChanged" />
                </MultiBinding>
            </TextBox.Text>
        </TextBox>

        <DataGrid Name="itemsList1" Grid.Row="8" Grid.Column="0" Grid.RowSpan="8" BorderBrush="Lime" BorderThickness="2" Grid.ColumnSpan="1" ContextMenu="{Binding Path=Selected1.Inventory, Mode=OneWay, ElementName=ThisControl, NotifyOnSourceUpdated=True, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged}" AutoGenerateColumns="False" CanUserSortColumns="False" CanUserAddRows="False" Background="#0F0F0F" Foreground="Lime" FontSize="12" >
            <DataGrid.Columns>
                <DataGridTextColumn CellStyle="{StaticResource TooltipCell}" IsReadOnly="True" Header="item" Width="100*" Binding="{Binding Name, UpdateSourceTrigger=PropertyChanged}" />
                <DataGridTextColumn Header="cost" Width="30*" IsReadOnly="True" Binding="{Binding Cost, UpdateSourceTrigger=PropertyChanged}" />
                <DataGridTextColumn Header="weight" Width="40*" IsReadOnly="True" Binding="{Binding Weight, UpdateSourceTrigger=PropertyChanged}" />
                <DataGridTextColumn Header="amount" Width="40*" IsReadOnly="True" Binding="{Binding Stack, UpdateSourceTrigger=PropertyChanged}" />
            </DataGrid.Columns>
            <DataGrid.Resources>
                <Style BasedOn="{StaticResource {x:Type DataGridColumnHeader}}" TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="Foreground" Value="Lime" />
                    <Setter Property="Background" Value="Black" />
                    <Setter Property="BorderBrush" Value="Lime" />
                    <Setter Property="BorderThickness" Value="1" />
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                </Style>
            </DataGrid.Resources>
        </DataGrid>
        <DataGrid Name="itemsList2" Grid.Row="8" Grid.Column="6" Grid.RowSpan="8" BorderBrush="Lime" BorderThickness="2" Grid.ColumnSpan="1" ContextMenu="{Binding Path=Selected2.Inventory, Mode=OneWay, ElementName=ThisControl, NotifyOnSourceUpdated=True, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged}" AutoGenerateColumns="False" CanUserSortColumns="False" CanUserAddRows="False" Background="#0F0F0F" Foreground="Lime" FontSize="12" >
            <DataGrid.Columns>
                <DataGridTextColumn CellStyle="{StaticResource TooltipCell}" IsReadOnly="True" Header="item" Width="100*" Binding="{Binding Name, UpdateSourceTrigger=PropertyChanged}" />
                <DataGridTextColumn Header="cost" Width="30*" IsReadOnly="True" Binding="{Binding Cost, UpdateSourceTrigger=PropertyChanged}" />
                <DataGridTextColumn Header="weight" Width="40*" IsReadOnly="True" Binding="{Binding Weight, UpdateSourceTrigger=PropertyChanged}" />
                <DataGridTextColumn Header="amount" Width="40*" IsReadOnly="True" Binding="{Binding Stack, UpdateSourceTrigger=PropertyChanged}" />
            </DataGrid.Columns>
            <DataGrid.Resources>
                <Style BasedOn="{StaticResource {x:Type DataGridColumnHeader}}" TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="Foreground" Value="Lime" />
                    <Setter Property="Background" Value="Black" />
                    <Setter Property="BorderBrush" Value="Lime" />
                    <Setter Property="BorderThickness" Value="1" />
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                </Style>
            </DataGrid.Resources>
        </DataGrid>

        <DataGrid Name="giveItemsList1" ContextMenu="{Binding Path=GiveItemList1, Mode=OneWay, ElementName=ThisControl, NotifyOnSourceUpdated=True, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged}" Grid.Row="8" Grid.Column="1" Grid.RowSpan="8" BorderBrush="Lime" BorderThickness="2" Grid.ColumnSpan="2" AutoGenerateColumns="False" CanUserAddRows="False" CanUserSortColumns="False" Background="#0F0F0F" Foreground="Lime" FontSize="12" >
            <DataGrid.Columns>
                <DataGridTextColumn CellStyle="{StaticResource TooltipCell}" IsReadOnly="True" Header="item" Width="100*" Binding="{Binding Name, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" />
                <DataGridTextColumn Header="cost" Width="30*" IsReadOnly="True" Binding="{Binding Cost, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" />
                <DataGridTextColumn Header="weight" Width="40*" IsReadOnly="True" Binding="{Binding Weight, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" />
                <DataGridTextColumn Header="amount" Width="40*" IsReadOnly="True" Binding="{Binding Stack, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" />
            </DataGrid.Columns>
            <DataGrid.Resources>
                <Style BasedOn="{StaticResource {x:Type DataGridColumnHeader}}" TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="Foreground" Value="Lime" />
                    <Setter Property="Background" Value="Black" />
                    <Setter Property="BorderBrush" Value="Lime" />
                    <Setter Property="BorderThickness" Value="1" />
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                </Style>
            </DataGrid.Resources>
        </DataGrid>
        <DataGrid Name="giveItemsList2" Grid.Row="8" Grid.Column="3" Grid.RowSpan="8" ContextMenu="{Binding Path=GiveItemList2, Mode=OneWay, ElementName=ThisControl, NotifyOnSourceUpdated=True, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged}" BorderBrush="Lime" BorderThickness="2" Grid.ColumnSpan="2" AutoGenerateColumns="False" CanUserSortColumns="False" CanUserAddRows="False" Background="#0F0F0F" Foreground="Lime" FontSize="12" >
            <DataGrid.Columns>
                <DataGridTextColumn CellStyle="{StaticResource TooltipCell}" IsReadOnly="True" Header="item" Width="100*" Binding="{Binding Name, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" />
                <DataGridTextColumn Header="cost" Width="30*" IsReadOnly="True" Binding="{Binding Cost, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" />
                <DataGridTextColumn Header="weight" Width="40*" IsReadOnly="True" Binding="{Binding Weight, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" />
                <DataGridTextColumn Header="amount" Width="40*" IsReadOnly="True" Binding="{Binding Stack, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" />
            </DataGrid.Columns>
            <DataGrid.Resources>
                <Style BasedOn="{StaticResource {x:Type DataGridColumnHeader}}" TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="Foreground" Value="Lime" />
                    <Setter Property="Background" Value="Black" />
                    <Setter Property="BorderBrush" Value="Lime" />
                    <Setter Property="BorderThickness" Value="1" />
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                </Style>
            </DataGrid.Resources>
        </DataGrid>
        <Grid Grid.Row="16">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="20*"/>
                <ColumnDefinition Width="20*"/>
            </Grid.ColumnDefinitions>
            <Button Name="giveButton1" Click="giveButton1_Click" Grid.Column="1" Grid.Row="16" Margin="1,1,1,1" BorderBrush="Lime" FontSize="16" Foreground="Lime" Background="Black">give</Button>
            <Button Name="giveAllButton1" Click="giveAllButton1_Click"  Grid.Column="0" Grid.Row="16" Margin="1,1,1,1" BorderBrush="Lime" FontSize="16" Foreground="Lime" Background="Black">give all</Button>
        </Grid>
        <Grid Grid.Row="16" Grid.Column="5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="20*"/>
                <ColumnDefinition Width="20*"/>
            </Grid.ColumnDefinitions>
            <Button Name="giveButton2" Click="giveButton2_Click" Grid.Column="0" Grid.Row="16" Margin="1,1,1,1" BorderBrush="Lime" FontSize="16" Foreground="Lime" Background="Black">give</Button>
            <Button Name="giveAllButton2" Click="giveAllButton2_Click" Grid.Column="1" Grid.Row="16" Margin="1,1,1,1" BorderBrush="Lime" FontSize="16" Foreground="Lime" Background="Black">give all</Button>
        </Grid>

        <Button Name="removeButton2" Click="removeButton2_Click"  IsEnabled="False" Grid.Column="4" Grid.Row="16" Margin="1,1,1,1" BorderBrush="Lime" FontSize="16" Foreground="Lime" Background="Black">remove</Button>
        <Button Name="removeButton1" Click="removeButton1_Click"  IsEnabled="False" Grid.Column="1" Grid.Row="16" Margin="1,1,1,1" BorderBrush="Lime" FontSize="16" Foreground="Lime" Background="Black">remove</Button>
        <Button Name="tradeButton" Click="tradeButton_Click" Grid.Column="2" Grid.ColumnSpan="2" Grid.Row="16" Margin="1,1,1,1" BorderBrush="Lime" FontSize="16" Foreground="Lime" Background="Black">confirm and trade</Button>

        <Button Name="cancelButton" Click="cancelButton_Click"  Grid.Column="1" Grid.Row="17" Margin="1,1,1,1" BorderBrush="Lime" FontSize="16" Foreground="Lime" Background="Black">cancel</Button>

        <Button Name="leaveButton" Click="leaveButton_Click"  Grid.Column="0" Grid.Row="17" Margin="1,1,1,1" BorderBrush="Lime" FontSize="16" Foreground="Lime" Background="Black">LEAVE</Button>
    </Grid>
</Controls:MetroWindow>